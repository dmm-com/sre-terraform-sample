/*
 * sample API
 *
 * This is sample.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
//        "errors"
//        "fmt"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// PingGet - 
func (s *DefaultApiService) PingGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update PingGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
         err := SqlConnect()
   //      if err != nil {
    //       fmt.Println(err.Error())
   //        err := errors.New("DB接続失敗")
    //     } else {
    //       fmt.Println("DB接続成功")
    //     }

        return Response(http.StatusNotImplemented, "OK"), err
}
